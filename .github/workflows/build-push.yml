name: Build-Push

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

    - name: Load git submodules
      run: git submodule sync && git submodule update --init

    - name: Install hugo
      run: |
        wget https://github.com/gohugoio/hugo/releases/download/v0.136.0/hugo_extended_0.136.0_Linux-64bit.tar.gz \
        && tar -xvf hugo_extended_0.136.0_Linux-64bit.tar.gz hugo \
        && mv  hugo /usr/local/bin \
        && rm hugo_extended_0.136.0_Linux-64bit.tar.gz

    - name: Build english and french sites
      run: |
        hugo --ignoreCache -d ~/cds-website-dist
        chmod -R 755 ~/cds-website-dist

    - name: Cache build
      uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
      with:
        path: |
          ~/cds-website-dist
        key: ${{ runner.os }}-${{ github.sha }}
  
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lang: ["fr", "en"]
    steps:
      - name: Retrieve Cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/cds-website-dist
          key: ${{ runner.os }}-${{ github.sha }}
      - name: Setup Ruby
        uses: ruby/setup-ruby@0481980f17b760ef6bca5e8c55809102a0af1e5a # v1.263.0
        with:
          ruby-version: 3.0
      - name: install html proofer
        run: gem install html-proofer
      - name: test
        run: |
          htmlproofer ~/cds-website-dist/${{ matrix.lang }} --allow_hash_href --ignore_empty_alt --disable_external --ignore_files=/lib/,/admin/ --checks=favicon  
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - lang: "fr"
            dist-id: "E27JWYHQ4915HY" 
            bucket: "cds-website-french-s3-bucket"
          - lang: "en"
            dist-id: "E3KGR0ME3JJZ19"
            bucket: "cds-website-english-s3-bucket"
    steps:
      - name: Retrieve Cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/cds-website-dist
          key: ${{ runner.os }}-${{ github.sha }}
      - name: configure aws credentials using OIDC              
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::521732289257:role/digital-canada-ca-website-apply  # use for TF apply or admin access (only works on `main` branch)
          role-session-name: cache
          aws-region: ca-central-1
      - name: Deploy and invalidate cache
        run: |
          aws s3 sync ~/cds-website-dist/${{ matrix.lang }} s3://${{ matrix.bucket }}/ --delete
          aws cloudfront create-invalidation --cli-input-json "{\"DistributionId\":\"${{ matrix.dist-id}}\",\"InvalidationBatch\":{\"Paths\":{\"Quantity\":1,\"Items\":[\"/*\"]},\"CallerReference\":\"$(date +%s)\"}}"
      - name: Report deployment to Sentinel
        uses: cds-snc/sentinel-forward-data-action@main
        with:
          input_data: '{"product": "${{ matrix.bucket }}", "version": "${{ github.sha }}", "repository": "${{ github.repository }}", "environment": "production"}'
          log_type: CDS_Product_Deployment_Data
          log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
          log_analytics_workspace_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}        