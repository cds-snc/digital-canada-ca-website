name: "Terraform Plan"

on:
  workflow_dispatch:
  pull_request:
    paths:
    - "terragrunt/**"
    - ".github/workflows/tf_plan_production.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.4.6
  TERRAGRUNT_VERSION: 0.45.11
  CONFTEST_VERSION: 0.42.1

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: s3
          - module: cloudfront
          - module: ecr 

    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

    - name: set up terraform tools
      uses: cds-snc/terraform-tools-setup@v1

    - name: configure aws credentials using OIDC
      uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
      with:
        role-to-assume: arn:aws:iam::521732289257:role/digital-canada-ca-website-plan   # use for TF plan or when you only need read-only access (works on all branches)
        role-session-name: TFPlan
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Plan
      uses: cds-snc/terraform-plan@e710cb1446e5dfe69a0182603fb06b5282d7eb07 # v3.4.3
      with:
        comment-delete: true
        comment-title: "Production: ${{ matrix.module }}"
        directory: terragrunt/env/production/${{ matrix.module }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        terragrunt: true   

